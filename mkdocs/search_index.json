{
    "docs": [
        {
            "location": "/", 
            "text": "About\n\n\nvCheck is a PowerShell HTML framework script, the script is designed to run as a scheduled task before you get into the office to present you with key information via an email directly to your inbox in a nice easily readable format.\n\n\nThis script picks on the key known issues and potential issues scripted as plugins for various technologies written as powershell scripts and reports it all in one place so all you do in the morning is check your email.\n\n\nOne of they key things about this report is if there is no issue in a particular place you will not receive that section in the email, for example if there are no datastores with less than 5% free space (configurable) then the disk space section in the virtual infrastructure version of this script, it will not show in the email, this ensures that you have only the information you need in front of you when you get into the office.\n\n\nThis script is not to be confused with an Audit script, although the reporting framework can also be used for auditing scripts too.  I don't want to remind you that you have 5 hosts and what there names are and how many CPUs they have each and every day as you don't want to read that kind of information unless you need it, this script will only tell you about problem areas with your infrastructure.\n\n\nThis script is not to be confused with an Audit script, although the reporting framework can also be used for auditing scripts too. I don't want to remind you that you have 5 hosts and what there names are and how many CPUs they have each and every day as you don't want to read that kind of information unless you need it, this script will only tell you about problem areas with your infrastructure.\n\n\nFeatures\n\n\nThe following items are included as part of the vCheck vSphere download, they are included as vCheck Plugins and can be removed or altered very easily by editing the specific plugin file which contains the data.  vCheck Plugins are found under the Plugins folder.\n\n\n\n\nGeneral Details\n\n\nNumber of Hosts\n\n\nNumber of VMs\n\n\nNumber of Templates\n\n\nNumber of Clusters\n\n\nNumber of Datastores\n\n\nNumber of Active VMs\n\n\nNumber of Inactive VMs\n\n\nNumber of DRS Migrations for the last days\n\n\nSnapshots over x Days old\n\n\nDatastores with less than x% free space\n\n\nVMs created over the last x days\n\n\nVMs removed over the last x days\n\n\nVMs with No Tools\n\n\nVMs with CD-Roms connected\n\n\nVMs with Floppy Drives Connected\n\n\nVMs with CPU ready over x%\n\n\nVMs with over x amount of vCPUs\n\n\nList of DRS Migrations\n\n\nHosts in Maintenance Mode\n\n\nHosts in disconnected state\n\n\nNTP Server check for a given NTP Name\n\n\nNTP Service check\n\n\nvmkernel warning messages ov the last x days\n\n\nVC Error Events over the last x days\n\n\nVC Windows Event Log Errors for the last x days with VMware in the details\n\n\nVC VMware Service details\n\n\nVMs stored on datastores attached to only one host\n\n\nVM active alerts\n\n\nCluster Active Alerts\n\n\nIf HA Cluster is set to use host datastore for swapfile, check the host has a swapfile location set\n\n\nHost active Alerts\n\n\nDead SCSI Luns\n\n\nVMs with over x amount of vCPUs\n\n\nvSphere check: Slot Sizes\n\n\nvSphere check: Outdated VM Hardware (Less than V7)\n\n\nVMs in Inconsistent folders (the name of the folder is not the same as the name)\n\n\nVMs with high CPU usage\n\n\nGuest disk size check\n\n\nHost over committing memory check\n\n\nVM Swap and Ballooning\n\n\nESXi hosts without Lockdown enabled\n\n\nESXi hosts with unsupported mode enabled\n\n\nGeneral Capacity information based on CPU/MEM usage of the VMs\n\n\nvSwitch free ports\n\n\nDisk over commit check\n\n\nHost configuration issues\n\n\nVCB Garbage (left snapshots)\n\n\nHA VM restarts and resets\n\n\nInaccessible VMs\n\n\nMuch, Much more.......\n\n\n\n\nRelease Notes\n\n\n\n\n6.22 - Fixes to VMware style. Consolidating plugins. Updates to style handling.\n\n\n6.21 - Added support for charts. New plugins. Support non-standard vCenter Ports. Bugfixes\n\n\n6.20 - First tagged release. Bugfixes. Email resource support added.\n\n\n6.19 - Bugfixes.\n\n\n6.18 - Added Job parameter to allow job specifications via XML file\n\n\n6.17 - Basic Internationalization (i18n) support\n\n\n6.16 - Table formatting rules\n\n\n6.15 - Added Category to all plugins and features to vCheckUtils script for Categorys.\n\n\n6.14 - Fixed a bug where a plugin was resetting the $VM variable so later plugins were not working :(\n\n\n6.13 - Fixed issue with plugins 63 and 65 not using the days\n\n\n6.12 - Changed Version to PluginVersion in each Plugin as the word Version is very hard to isolate!\n\n\n6.11 - Fixed a copy and paste mistake and plugin issues.\n\n\n6.10 - Fixed multiple spelling mistakes and small plugin issues\n\n\n6.9 - Fixed VMKernel logs but had to remove date/Time parser due to inconsistent VMKernel Log entries\n\n\n6.8 - Added Creator of snapshots back in due to popular demand\n\n\n6.7 - Added Multiple plugins from contributors - Thanks!\n\n\n6.6 - Tech Support Mode Plugin fixed to work with 5.0 hosts\n\n\n6.5 - HW Version plugin fixed due to string output\n\n\n6.4 - Added a 00 plugin and VeryLastPlugin for vCenter connection info to separate the report entirely from VMware if needed.\n\n\n6.3 - Changed the format of each Plugin so you can include a count for each header and altered plugin layout for each plugin.\n\n\n6.2 - Added Time to Run section based on TimeToBuild by Frederic Martin\n\n\n6.1 - Bug fixes, filter for ps1 files only in the plugins folder so other files can be kept in the plugins folder.\n\n\n6.0 - Moved plugins into seperate scripts to make it easier to expand vCheck and fixed issues + lots lots more !\n\n\n5.1 - Code Fixes and ability to change colour for title text to fix issue with Outlook 2007/10 not displaying correctly\n\n\n5.0 - Changed the order and a few titles etc, tidy up !\n\n\n4.9 - Added Inacessable VMs\n\n\n4.8 - Added HA VM restarts and resets\n\n\n4.7 - VMTools Issues\n\n\n4.6 - Added VCB Garbage\n\n\n4.5 - Added Host config issues\n\n\n4.4 - Added Disk Overcommit check\n\n\n4.3 - Added vSwitch free ports check\n\n\n4.2 - Added General Capacity Information based on CPU and MEM ussage per cluster\n\n\n4.1 - Added the ability to change the colours of the report.\n\n\n4.0 - HTML Tidy up, comments added for each item and the ability to enable/disable comments.", 
            "title": "Home"
        }, 
        {
            "location": "/#about", 
            "text": "vCheck is a PowerShell HTML framework script, the script is designed to run as a scheduled task before you get into the office to present you with key information via an email directly to your inbox in a nice easily readable format.  This script picks on the key known issues and potential issues scripted as plugins for various technologies written as powershell scripts and reports it all in one place so all you do in the morning is check your email.  One of they key things about this report is if there is no issue in a particular place you will not receive that section in the email, for example if there are no datastores with less than 5% free space (configurable) then the disk space section in the virtual infrastructure version of this script, it will not show in the email, this ensures that you have only the information you need in front of you when you get into the office.  This script is not to be confused with an Audit script, although the reporting framework can also be used for auditing scripts too.  I don't want to remind you that you have 5 hosts and what there names are and how many CPUs they have each and every day as you don't want to read that kind of information unless you need it, this script will only tell you about problem areas with your infrastructure.  This script is not to be confused with an Audit script, although the reporting framework can also be used for auditing scripts too. I don't want to remind you that you have 5 hosts and what there names are and how many CPUs they have each and every day as you don't want to read that kind of information unless you need it, this script will only tell you about problem areas with your infrastructure.", 
            "title": "About"
        }, 
        {
            "location": "/#features", 
            "text": "The following items are included as part of the vCheck vSphere download, they are included as vCheck Plugins and can be removed or altered very easily by editing the specific plugin file which contains the data.  vCheck Plugins are found under the Plugins folder.   General Details  Number of Hosts  Number of VMs  Number of Templates  Number of Clusters  Number of Datastores  Number of Active VMs  Number of Inactive VMs  Number of DRS Migrations for the last days  Snapshots over x Days old  Datastores with less than x% free space  VMs created over the last x days  VMs removed over the last x days  VMs with No Tools  VMs with CD-Roms connected  VMs with Floppy Drives Connected  VMs with CPU ready over x%  VMs with over x amount of vCPUs  List of DRS Migrations  Hosts in Maintenance Mode  Hosts in disconnected state  NTP Server check for a given NTP Name  NTP Service check  vmkernel warning messages ov the last x days  VC Error Events over the last x days  VC Windows Event Log Errors for the last x days with VMware in the details  VC VMware Service details  VMs stored on datastores attached to only one host  VM active alerts  Cluster Active Alerts  If HA Cluster is set to use host datastore for swapfile, check the host has a swapfile location set  Host active Alerts  Dead SCSI Luns  VMs with over x amount of vCPUs  vSphere check: Slot Sizes  vSphere check: Outdated VM Hardware (Less than V7)  VMs in Inconsistent folders (the name of the folder is not the same as the name)  VMs with high CPU usage  Guest disk size check  Host over committing memory check  VM Swap and Ballooning  ESXi hosts without Lockdown enabled  ESXi hosts with unsupported mode enabled  General Capacity information based on CPU/MEM usage of the VMs  vSwitch free ports  Disk over commit check  Host configuration issues  VCB Garbage (left snapshots)  HA VM restarts and resets  Inaccessible VMs  Much, Much more.......", 
            "title": "Features"
        }, 
        {
            "location": "/#release-notes", 
            "text": "6.22 - Fixes to VMware style. Consolidating plugins. Updates to style handling.  6.21 - Added support for charts. New plugins. Support non-standard vCenter Ports. Bugfixes  6.20 - First tagged release. Bugfixes. Email resource support added.  6.19 - Bugfixes.  6.18 - Added Job parameter to allow job specifications via XML file  6.17 - Basic Internationalization (i18n) support  6.16 - Table formatting rules  6.15 - Added Category to all plugins and features to vCheckUtils script for Categorys.  6.14 - Fixed a bug where a plugin was resetting the $VM variable so later plugins were not working :(  6.13 - Fixed issue with plugins 63 and 65 not using the days  6.12 - Changed Version to PluginVersion in each Plugin as the word Version is very hard to isolate!  6.11 - Fixed a copy and paste mistake and plugin issues.  6.10 - Fixed multiple spelling mistakes and small plugin issues  6.9 - Fixed VMKernel logs but had to remove date/Time parser due to inconsistent VMKernel Log entries  6.8 - Added Creator of snapshots back in due to popular demand  6.7 - Added Multiple plugins from contributors - Thanks!  6.6 - Tech Support Mode Plugin fixed to work with 5.0 hosts  6.5 - HW Version plugin fixed due to string output  6.4 - Added a 00 plugin and VeryLastPlugin for vCenter connection info to separate the report entirely from VMware if needed.  6.3 - Changed the format of each Plugin so you can include a count for each header and altered plugin layout for each plugin.  6.2 - Added Time to Run section based on TimeToBuild by Frederic Martin  6.1 - Bug fixes, filter for ps1 files only in the plugins folder so other files can be kept in the plugins folder.  6.0 - Moved plugins into seperate scripts to make it easier to expand vCheck and fixed issues + lots lots more !  5.1 - Code Fixes and ability to change colour for title text to fix issue with Outlook 2007/10 not displaying correctly  5.0 - Changed the order and a few titles etc, tidy up !  4.9 - Added Inacessable VMs  4.8 - Added HA VM restarts and resets  4.7 - VMTools Issues  4.6 - Added VCB Garbage  4.5 - Added Host config issues  4.4 - Added Disk Overcommit check  4.3 - Added vSwitch free ports check  4.2 - Added General Capacity Information based on CPU and MEM ussage per cluster  4.1 - Added the ability to change the colours of the report.  4.0 - HTML Tidy up, comments added for each item and the ability to enable/disable comments.", 
            "title": "Release Notes"
        }, 
        {
            "location": "/contributing/", 
            "text": "About Contributing\n\n\nHi! We can't thank you enough for wanting to contribute; the community is what keeps the wheels moving on this awesome project.\nAll we ask is that you follow some simple guidelines. The roots of these guidelines stem from the developer community and the actual document has been borrowed from \nMicrosoft's DscResources\n repository; they did an excellent job putting these guidelines together; why reinvent the wheel?\n\n\nUsing GitHub, Git, and this repository\n\n\nWe are working on more detailed instructions that outline the basics.\n\n\nContributing to the existing vCheck-vSphere repository\n\n\nForks and Pull Requests\n\n\nGitHub fosters collaboration through the notion of \npull requests\n.\nOn GitHub, anyone can \nfork\n an existing repository into their own branch where they can make private changes to the original repository.\nTo contribute these changes back into the original repository, a user simply creates a pull request in order to \"request\" that the changes be taken \"upstream\".\n\n\nLifecycle of a pull reqeust\n\n\n\n\nAlways create pull requests to the \ndev\n branch of a repository\n.\nFor more information, learn about the \nbranch structure\n that we are using.\n\n\nWhen you create a pull request, fill out the description with a summary of what's included in your changes.\nIf the changes are related to an existing GitHub issue, please reference the issue in your description.\n\n\nOnce the PR is submitted, we will review your code\n\n\nOnce the code review is done, and all merge conflicts are resolved, a maintainer will merge your changes.\n\n\n\n\nContributing to documentation\n\n\nWe are working on shifting documentation over to Markdown files in conjunction with \nMkDocs\n. This will provide a more robust platform/presentation for documentation; more details to be added here on how to contribute.\n\n\nIf you want to contribute new documentation, first check for \nissues tagged as \"Documentation\"\n to make sure you're not duplicating efforts.\nIf no one seems to be working on what you have planned:\n\n Open a new issue tagged as \"Documentation\" to tell others what you're working on\n\n Create a fork of our repository and start adding new Markdown-based documentation to it\n\n When you're ready to contribute your documentation, submit a pull request to the \ndev* branch\n\n\nGitHub Flavored Markdown (GFM)\n\n\nAll of the articles in this repository use \nGitHub Flavored Markdown (GFM)\n.\n\n\nIf you are looking for a good editor, try \nMarkdown Pad\n or\nGitHub also provides a web interface for Markdown editing with syntax highlighting and the ability to preview changes.\n\n\nSome of the more basic GFM syntax includes:\n\n\n\n\nLine breaks vs. paragraphs:\n In Markdown there is no HTML \nbr /\n or \np /\n element.\nInstead, a new paragraph is designated by an empty line between two blocks of text.\n(Note: Please add a single newline after each sentence to simplify the command-line output of diffs and history.)\nIt will simplify diffs and history.\n\n\nItalics:\n The HTML \nem\nsome text\n/em\n is written as \n*some text*\n\n\nBold:\n The HTML \nstrong\nsome text\n/strong\n element is written as \n**some text**\n\n\nHeadings:\n HTML headings are designated using \n#\n characters at the start of the line.\nThe number of \n#\n characters corresponds to the hierarchical level of the heading (for example, \n#\n = \nh1\n and \n###\n = \nh3\n).\n\n\nNumbered lists:\n To make a numbered (ordered) list start the line with \n1.\n.\nIf you want multiple elements within a single list element, format your list as follows:\n\n\n\n\n1.  For the first element (like this one), insert a tab stop after the 1.\n\n    To include a second element (like this one), insert a line break after the first and align indentations.\n\n\n\n\nto get this output:\n\n\n\n\n\n\nFor the first element (like this one), insert a tab stop after the 1.\n\n\nTo include a second element (like this one), insert a line break after the first and align indentations.\n\n\n\n\n\n\nBulleted lists:\n Bulleted (unordered) lists are almost identical to ordered lists except that the \n1.\n is replaced with either \n*\n, \n-\n, or \n+\n.\nMultiple element lists work the same way as with ordered lists.\n\n\n\n\nLinks:\n The syntax for a hyperlink is \n[visible link text](link url)\n.\nLinks can also have references, which will be discussed in the \"Link and Image References\" section below.\n\n\n\n\nEditing an existing plugin\n\n\nWe are in the process of adding/consolidating more detailed documentation around this.\n\n\nCreating a new plugin\n\n\nWe are in the process of adding/consolidating more detailed documentation around this. In the meantime, you can review the documentation that we do have inside the \nREADME.md\n file for the repo.\n\n\nSlack\n\n\nWe are using Slack for general discussion around the vCheck utility. This is a good place for general questions or minor issues that someone might be able to answer, on the spot. If something cannot be resolved in the chat, it may warrant the submission of an Issue. Head over to the 'vCheck' Channel in the \nVMware {Code} Slack group\n to join the convo.\n\n\nWe are also using Waffle.io to help track and resolve issues. You can visit the the dashboard \n to view or submit issues (you can also still use the GitHub web interface to submit/view issues).\n\n\nStyle guidelines\n\n\nWhen contributing to this repository, please follow the following guidelines:\n\n\n\n\nFor all indentation, use 4 spaces instead of tab stops\n\n\nMake sure all files are encoding using UTF-8.\n\n\nWhen writing Markdown, if a paragraph includes more than one setence, end each sentence with a newline.\nGitHub will still render the sentences as a single paragraph, but the readability of \ngit diff\n will be greatly improved.\n\n\n\n\nBranch structure\n\n\nWe are using a \ngit flow\n model for development.\nWe recommend that you create local working branches that target a specific scope of change.\nEach branch should be limited to a single feature/bugfix both to streamline workflows and reduce the possibility of merge conflicts.", 
            "title": "Contributing"
        }, 
        {
            "location": "/contributing/#about-contributing", 
            "text": "Hi! We can't thank you enough for wanting to contribute; the community is what keeps the wheels moving on this awesome project.\nAll we ask is that you follow some simple guidelines. The roots of these guidelines stem from the developer community and the actual document has been borrowed from  Microsoft's DscResources  repository; they did an excellent job putting these guidelines together; why reinvent the wheel?", 
            "title": "About Contributing"
        }, 
        {
            "location": "/contributing/#using-github-git-and-this-repository", 
            "text": "We are working on more detailed instructions that outline the basics.", 
            "title": "Using GitHub, Git, and this repository"
        }, 
        {
            "location": "/contributing/#contributing-to-the-existing-vcheck-vsphere-repository", 
            "text": "", 
            "title": "Contributing to the existing vCheck-vSphere repository"
        }, 
        {
            "location": "/contributing/#forks-and-pull-requests", 
            "text": "GitHub fosters collaboration through the notion of  pull requests .\nOn GitHub, anyone can  fork  an existing repository into their own branch where they can make private changes to the original repository.\nTo contribute these changes back into the original repository, a user simply creates a pull request in order to \"request\" that the changes be taken \"upstream\".", 
            "title": "Forks and Pull Requests"
        }, 
        {
            "location": "/contributing/#lifecycle-of-a-pull-reqeust", 
            "text": "Always create pull requests to the  dev  branch of a repository .\nFor more information, learn about the  branch structure  that we are using.  When you create a pull request, fill out the description with a summary of what's included in your changes.\nIf the changes are related to an existing GitHub issue, please reference the issue in your description.  Once the PR is submitted, we will review your code  Once the code review is done, and all merge conflicts are resolved, a maintainer will merge your changes.", 
            "title": "Lifecycle of a pull reqeust"
        }, 
        {
            "location": "/contributing/#contributing-to-documentation", 
            "text": "We are working on shifting documentation over to Markdown files in conjunction with  MkDocs . This will provide a more robust platform/presentation for documentation; more details to be added here on how to contribute.  If you want to contribute new documentation, first check for  issues tagged as \"Documentation\"  to make sure you're not duplicating efforts.\nIf no one seems to be working on what you have planned:  Open a new issue tagged as \"Documentation\" to tell others what you're working on  Create a fork of our repository and start adding new Markdown-based documentation to it  When you're ready to contribute your documentation, submit a pull request to the  dev* branch", 
            "title": "Contributing to documentation"
        }, 
        {
            "location": "/contributing/#github-flavored-markdown-gfm", 
            "text": "All of the articles in this repository use  GitHub Flavored Markdown (GFM) .  If you are looking for a good editor, try  Markdown Pad  or\nGitHub also provides a web interface for Markdown editing with syntax highlighting and the ability to preview changes.  Some of the more basic GFM syntax includes:   Line breaks vs. paragraphs:  In Markdown there is no HTML  br /  or  p /  element.\nInstead, a new paragraph is designated by an empty line between two blocks of text.\n(Note: Please add a single newline after each sentence to simplify the command-line output of diffs and history.)\nIt will simplify diffs and history.  Italics:  The HTML  em some text /em  is written as  *some text*  Bold:  The HTML  strong some text /strong  element is written as  **some text**  Headings:  HTML headings are designated using  #  characters at the start of the line.\nThe number of  #  characters corresponds to the hierarchical level of the heading (for example,  #  =  h1  and  ###  =  h3 ).  Numbered lists:  To make a numbered (ordered) list start the line with  1. .\nIf you want multiple elements within a single list element, format your list as follows:   1.  For the first element (like this one), insert a tab stop after the 1.\n\n    To include a second element (like this one), insert a line break after the first and align indentations.  to get this output:    For the first element (like this one), insert a tab stop after the 1.  To include a second element (like this one), insert a line break after the first and align indentations.    Bulleted lists:  Bulleted (unordered) lists are almost identical to ordered lists except that the  1.  is replaced with either  * ,  - , or  + .\nMultiple element lists work the same way as with ordered lists.   Links:  The syntax for a hyperlink is  [visible link text](link url) .\nLinks can also have references, which will be discussed in the \"Link and Image References\" section below.", 
            "title": "GitHub Flavored Markdown (GFM)"
        }, 
        {
            "location": "/contributing/#editing-an-existing-plugin", 
            "text": "We are in the process of adding/consolidating more detailed documentation around this.", 
            "title": "Editing an existing plugin"
        }, 
        {
            "location": "/contributing/#creating-a-new-plugin", 
            "text": "We are in the process of adding/consolidating more detailed documentation around this. In the meantime, you can review the documentation that we do have inside the  README.md  file for the repo.", 
            "title": "Creating a new plugin"
        }, 
        {
            "location": "/contributing/#slack", 
            "text": "We are using Slack for general discussion around the vCheck utility. This is a good place for general questions or minor issues that someone might be able to answer, on the spot. If something cannot be resolved in the chat, it may warrant the submission of an Issue. Head over to the 'vCheck' Channel in the  VMware {Code} Slack group  to join the convo.  We are also using Waffle.io to help track and resolve issues. You can visit the the dashboard   to view or submit issues (you can also still use the GitHub web interface to submit/view issues).", 
            "title": "Slack"
        }, 
        {
            "location": "/contributing/#style-guidelines", 
            "text": "When contributing to this repository, please follow the following guidelines:   For all indentation, use 4 spaces instead of tab stops  Make sure all files are encoding using UTF-8.  When writing Markdown, if a paragraph includes more than one setence, end each sentence with a newline.\nGitHub will still render the sentences as a single paragraph, but the readability of  git diff  will be greatly improved.", 
            "title": "Style guidelines"
        }, 
        {
            "location": "/contributing/#branch-structure", 
            "text": "We are using a  git flow  model for development.\nWe recommend that you create local working branches that target a specific scope of change.\nEach branch should be limited to a single feature/bugfix both to streamline workflows and reduce the possibility of merge conflicts.", 
            "title": "Branch structure"
        }
    ]
}